{
  "_from": "msql",
  "_id": "msql@1.0.3",
  "_inBundle": false,
  "_integrity": "sha1-xEUnGGAaYOw3SaEf4T3OFnudXeo=",
  "_location": "/msql",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "msql",
    "fetchSpec": "latest",
    "name": "msql",
    "raw": "msql",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/msql/-/msql-1.0.3.tgz",
  "_shasum": "c4452718601a60ec3749a11fe13dce167b9d5dea",
  "_shrinkwrap": null,
  "_spec": "msql",
  "_where": "/home/julius-oketayot/Desktop/Code Master/Lesson/express_lesson2",
  "author": {
    "name": "Onionkings"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "This is a tool for making build sql easier.",
  "devDependencies": {},
  "directories": {
    "test": "tests"
  },
  "keywords": [
    "msql",
    "mysql",
    "sql"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "msql",
  "optionalDependencies": {},
  "readme": "## Msql\r\n\r\nThis is a tool for building sql without any stress.  \r\nWith this tool, you can build a sql only by some paramters.  \r\nIf you love this tool, I hope you can star me at my github [ManitoYu](https://github.com/ManitoYu/msql).  \r\nI am a chinese college student, and I want to try my best to contribute my code to the code world. So I hope you can support me.    \r\n\r\n### Select\r\n\r\nThere is a demo referring to select some records.  \r\n\r\n```js\r\nvar Msql = require('msql');\r\nvar where = {\r\n    id: 1,\r\n    path: 'images/3.jpg',  \r\n    $or: ['id|path']\r\n};\r\nvar sql = Msql('img').where(where).select();\r\nconsole.log(sql); // select * from img where id = 1 OR path = \"images/3.jpg\"\r\n```\r\n\r\n### Find\r\n\r\nIf you want to find only one record by primary key, you can config as follows.  \r\n\r\n```js\r\nvar Msql = Msql('img').config({\r\n    pk: 'id' // assign the primary key\r\n});\r\nvar sql = Msql.find(1); // Then you can query according to pk\r\nconsole.log(sql); // SELECT * FROM img where id = 1\r\n```\r\n\r\nCertainly, you can query without any config.  \r\n\r\n```js\r\nvar sql = Msql('img').find({ id: 1 });\r\nconsole.log(sql); // SELECT * FROM img where id = 1\r\n```\r\n\r\n### Create\r\n\r\nThen you can see the demo referring to create a new record as follow.  \r\n\r\n```js\r\nvar Msql = require('msql');\r\nvar data = {\r\n    path: 'path1',\r\n    con: 'This is content'\r\n};\r\nvar sql = Msql('img').create(data);\r\nconsole.log(sql); // INSERT INTO img(path, con) VALUES (\"path1\", \"This is a new record\")\r\n```\r\n\r\n### Update\r\n\r\nOnce you set assign the primay key of table, you can update a record as follow.  \r\nAssumed that you will update a record which id is equal to 1, you can do it like this.  \r\n\r\n```js\r\nvar Img = Msql('img').config({\r\n    pk: 'id'\r\n});\r\nvar sql = Img.update({ id: 1, path: 'path1' }); // specify the value of id, will update the record which id is 1\r\nconsole.log(sql); // UPDATE img SET path = \"path1\" where id = 1\r\n```\r\n\r\n### Delete\r\n\r\nif you specify the primary key, you can delete a record only by giving the value of pk.  \r\n\r\n```js\r\nvar Img = Msql('img').config({\r\n    pk: 'id'\r\n});\r\nvar sql = Img.delete(1); // id = 1\r\nconsole.log(sql); // DELETE FROM img where id = 1\r\n```\r\n\r\nAnd you can also delete it without any config.  \r\n\r\n```js\r\nvar sql = Img.delete({ id: 1 }); \r\nconsole.log(sql); // DELETE FROM img where id = 1\r\n```\r\n\r\n### Where\r\n\r\n* eq\r\n* neq\r\n* neq\r\n* gt\r\n* egt\r\n* lt\r\n* elt\r\n\r\n```js\r\nImg.where({ id: { $lt: 2 } }).select(); // SELECT * FROM img where (id < 2)\r\nImg.where({ id: [{ $gt: 1 }, { elt: 4 }] }).select(); // SELECT * FROM img where ((id > 1) OR (id <= 4))\r\n```\r\n\r\n* like\r\n* in\r\n\r\n```js\r\nImg.where({ path: { $like: 'con1' }, id: 3 }).select(); // SELECT * FROM img where (path like \"con1\") AND (id = 3)\r\nImg.where({ id: { $in: [1, 2, 3, 4] } }).select(); // SELECT * FROM img where (id in (1, 2, 3, 4))\r\n```\r\n\r\n### Field\r\nIf you don't want to query all of fields, you can assign the several fields by yourself.  \r\n\r\n```js\r\nvar sql = Msql.field(['path']).find({ id: 1 }); // a list of fields\r\nconsole.log(sql); // SELECT path FROM img where id = 1\r\n```\r\n\r\n\r\n",
  "readmeFilename": "readme.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.3"
}
